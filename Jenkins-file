def gv
pipeline{
  agent any
  environment{
    NEW_VERSION = "1.0.0"
  }
  tools{
    maven 'Maven 3.9.6'
  }
  parameters{
    //string(name: 'Pipeline', defaultValue: 'My Pipeline', description: 'Select name for pipeline run.')
    choice(name: 'VERSION', choices: ['1.0.0','1.1.0','1.2.0'], description: 'Select new version')
    booleanParam(name: 'Build', defaultValue: true, description: 'Build Application')
  }
  stages{
    stage("init"){
      steps{
        script{
          gv = load 'script.groovy'
        }
      }
    }
    stage("Testing"){
      when{
        expression{
          NEW_VERSION == "1.0.0"
        }
      }
      steps{
        script{
          gv.appTest()
        }
        /*
        echo "Running test!"
        sh "mvn --v"
        */
      }
    }
    stage("Building"){
      when{
        expression{
          params.Build == true
        }
      }
      steps{
        script{
          env.INPT = input message: 'Select build type.', ok: 'Build', parameter: [choice(name: 'Build_Type', choices: ['Java','Python'], description: '')]
          gv.appBuild()
          echo "Build application with ${INPT}"
        }
      }
    }
    stage("Deploying"){
      input{
      message 'Select the deployment server'
      ok 'Deploy'
      parameters{
          choice(name: 'Deployment', choices: ['dev','test','prod'], description: '')
        }
      }
      steps{
        script{
          withCredentials([
            usernamePassword(credentialsId: 'server_credentials', usernameVariable: 'USER', passwordVariable: 'PWD')
          ]){
            print "username=" + USER + "  " + "password=" + PWD 
          }
        }
        script{
          gv.appDeploy()
          echo "Deployment done with ${Deployment}"
        }
      }
    }
  }

  post{
    always{ 
      echo "Process End!"
    }
    success{
      echo "Completed with success!"
    }
    failure{
      echo "failed!"
    }
  }

}
